===========================
Testing 0-add_integer.py
===========================

The module defines an integer addition function "add_integer(a, b=98)".

Use:

""add_integer(...)"" returns the addition of two arguments using the ""+"" operator.

::

    >>> add_integer = __import__('0-add_integer').add_integer
    >>> add_integer(2, 3)
    5

::

    >>> add_integer(2, -3)
    -1

The function also works with floating-point values.

::

    >>> add_integer(2.0, 3.0)
    5

Note that floats are cast to integers before addition is performed.

::

    >>> add_integer(2.9, 0.2)
    2

::

    >>> add_integer(-2.9, -0.2)
    -2

Floating and non-floating point values can be combined.

::

    >>> add_integer(2.3, -3)
    -1

The second argument is optional - by default, it is 98.

::

    >>> add_integer(2)
    100

Non-Numbers

""add_integer()"" expects that both arguments are either integers or floats.
If either argument is a non-integer or non-float, a TypeError is raised.

::

    >>> add_integer(None, 4)
    Traceback (most recent call last):
    TypeError: a must be an integer or b must be an integer
